Based on https://www.w3schools.com/sql/default.asp db.


1.Вывести всех сотрудников с именем Robert.

SELECT * FROM Employees where FirstName = 'Robert'


2.Вывести наименования продуктов с кодами 1, 3, 7, 9 и ценой, уменьшенной на 50%. 

SELECT ProductName, Price*0.5
FROM Products
WHERE ProductID IN ('1', '3', '7', '9') ;


3.Выбрать все заказы сотрудника с номером 5 или заказы клиента с кодом больше 88 и кодом грузоотправителя 1. 

SELECT *
FROM Orders
WHERE EmployeeID='5' OR (CustomerID>88 AND ShipperID='1');


4. Вывести все продукты, у которых код продукта >= 64 или продукты, у которых поставщик = "Tokyo Traders" (подзапрос).

SELECT *
FROM Products
WHERE ProductID>=64 OR SupplierID=(SELECT SupplierID FROM [Suppliers] WHERE SupplierName='Tokyo Traders');

5. Вывести записи о заказах сотрудника в виде: OrderID, LastName, FirstName. (написать запрос по w3schools) 

SELECT
  o.OrderID,
  e.LastName,
  e.FirstName
FROM
  Orders o
  LEFT JOIN Employees e ON e.EmployeeID = o.EmployeeID
ORDER BY
  e.LastName;



6. Вывести всю информацию о сотрудниках, у которых нет ни одного заказа (join и его виды).

SELECT
   e.EmployeeID,
   e.LastName,
   e.FirstName,
   e.BirthDate,
   e.Photo,
   e.Notes
FROM
   Employees e
   LEFT JOIN
      Orders o
      ON e.EmployeeID = o.EmployeeID
WHERE
   o.OrderID is null;


7. У нас есть две таблицы: Shippers и Suppliers, необходимо сделать общий справочник состоящий из двух колонок (имя таблицы с которой взята запись, название ShipperName или SupplierName 

SELECT
  'Shipper' AS Type,
  ShipperName AS Name
FROM
  Shippers
UNION
SELECT
  'Supplier',
  SupplierName
FROM
  Suppliers;

8. Найти максимальный номер заказа сотрудника Buchanan Steven 

SELECT
  MAX(o.OrderID) OrderID
FROM
  Employees AS e
  LEFT JOIN Orders AS o ON e.EmployeeID = o.EmployeeID
WHERE
  e.LastName = 'Buchanan' AND e.FirstName = 'Steven'


9. Вывести товары, цены которых больше средней цены по всем продуктам

SELECT
  *
FROM
  Products
WHERE
  Price > (
    SELECT
      AVG(Price)
    FROM
      Products
  )



10. Для каждого заказа посчитать его итоговую стоимость 

SELECT
  OrderID as 'Order',
  SUM (ProductID * Quantity) as 'Total price'
FROM
  OrderDetails
GROUP BY
  OrderID;


11. Создать пользователя в таблице Employees с номером 11. 

INSERT INTO
  Employees (EmployeeID)
VALUES
  ('11');

12. Изменить значение в колонке EmployeeID на 11 для CustomerID in (89, 90) 

UPDATE
  Orders
SET
  EmployeeID = '11'
WHERE
  CustomerID IN(89, 90);


13. Для товаров, у которых цена больше средней цены по всем продуктам, повысить цену еще на 10%. 

UPDATE
  Products
SET
  Price = Price * 1.1
WHERE
  Price > (
    SELECT
      AVG(Price)
    FROM
      Products
  );
